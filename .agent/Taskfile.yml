version: '3'

vars:
  BINARY_NAME: agent
  BUILD_DIR: bin
  COVERAGE_DIR: coverage

tasks:
  default:
    desc: Show available tasks
    cmds:
      - task --list

  build:
    desc: Build the agent binary
    cmds:
      - go mod tidy
      - mkdir -p {{.BUILD_DIR}}
      - go build -o {{.BUILD_DIR}}/{{.BINARY_NAME}} ./cmd/agent
    sources:
      - "**/*.go"
      - go.mod
      - go.sum
    generates:
      - "{{.BUILD_DIR}}/{{.BINARY_NAME}}"

  clean:
    desc: Clean build artifacts and coverage reports
    cmds:
      - rm -rf {{.BUILD_DIR}}
      - rm -rf {{.COVERAGE_DIR}}
      - rm -f coverage.out coverage.html

  test:
    desc: Run all tests with race detection
    cmds:
      - go test -short -race ./...

  test-verbose:
    desc: Run all tests with verbose output
    cmds:
      - go test -v -race ./...

  test-coverage:
    desc: Generate test coverage report
    cmds:
      - mkdir -p {{.COVERAGE_DIR}}
      - go test -coverprofile={{.COVERAGE_DIR}}/coverage.out ./...
      - go tool cover -html={{.COVERAGE_DIR}}/coverage.out -o {{.COVERAGE_DIR}}/coverage.html
      - echo "Coverage report generated at {{.COVERAGE_DIR}}/coverage.html"

  lint:
    desc: Run golangci-lint
    cmds:
      - echo ""

  check:
    desc: Run all quality checks (tests, linting, formatting)
    deps: [test, lint, fmt]
    cmds:
      - echo "All quality checks passed!"
